/*
Class that implements Binary Search algorithm on a sorted array
This uses an iterative version of the algorithm
Sam Moore v1.0
 */

package searchalgorithms;

public class BinarySearch
{
    private int[] arr;
    private int target;

    //Constructor
    public BinarySearch(int[] arrIn, int targetIn)
    {
        arr = arrIn;
        target = targetIn;
    }

    public int[] getArr()
    {
        return arr;
    }

    public int getTarget()
    {
        return target;
    }

    public void setArr(int[] arrIn)
    {
         arr = arrIn;
    }

    public void setTarget(int targetIn)
    {
        target = targetIn;
    }

    public int searchArray()
    {
        int low = 0;
        int high = arr.length - 1;

        //Check if array is empty
        while(low <= high)
        {
            //Find midpoint
            int mid = (low + high) / 2;

            if(target < arr[mid])
            {
                high = mid - 1;
            }else if(target > arr[mid]){
                low = mid + 1;
            }else if(target == arr[mid]){
                return mid;
            }
        }
        return -1;
    }
}
